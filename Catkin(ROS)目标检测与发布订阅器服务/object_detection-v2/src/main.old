#include "object_detection.h"
#include <ros/ros.h>
#include <ros/package.h>
#include "std_msgs/String.h"
#include <sensor_msgs/image_encodings.h>
#include <image_transport/image_transport.h>
#include <cv_bridge/cv_bridge.h>
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include "time_helper.h"

int main(int argc, char **argv)
{	
        ros::init(argc,argv,"ros_caffe_test");
        ros::NodeHandle nh;
        ros::Publisher chatter_pub = nh.advertise<std_msgs::String>("chatter",1);
        ros::Rate loop_rate(10);
        const std::string ROOT_SAMPLE = ros::package::getPath("ros_caffe");
        std::string configfile=ROOT_SAMPLE+"/src/object_detection-v2/config/config.xml";
	SSD ssd(configfile);
  
        std::string result;
	std::string presult;
        cv::VideoCapture vcap(0);
        
    if (false == vcap.isOpened())
    {
        ROS_ERROR_STREAM( "camera cannot open!");
        ros::shutdown;
    }
    
    cv_bridge::CvImagePtr frame;
    frame = boost::make_shared<cv_bridge::CvImage>();
    frame->encoding=sensor_msgs::image_encodings::BGR8;

    cv::Mat image;
    std_msgs::String msg;
	int count = 0;
    while (true)
    {
		{
			//__TIC__();
			 vcap >> image;
                     // imshow("",image);
                  // std::cout<<"4..."<<std::endl;

			//printf("frame w = %d\th = %d\n", image.cols, image.rows);
			//printf("sg.xu: camera capture elapsed time: ");
			//__TOC__();
		}

		__TIC__();
                result=ssd.detect(image);
		if(result == "")
		count++;
		if(count == 20)
		{
			msg.data = "";
			count = 0;
		}
               presult = msg.data;
               if(presult != result && result !="")
               {
                   //std::cout<<result<<std::endl;
                   msg.data = result;
                   ROS_INFO("HAHAHAHAHAHAAH");
                   ROS_INFO("%s",msg.data.c_str());
                   //ROS_INFO("%s",msg.data.c_str());
                        //if(msg.data!="")
			//{
				chatter_pub.publish(msg);
				//ROS_INFO("%s",msg.data.c_str());
				//ROS_INFO("%d",msg.data.c_str()[0]);
			//}
                        //chatter_pub.publish(msg);
               }
		
		//2017.04.12  注释以下两段
		//printf("sg.xu: total elapsed time: ");
		__TOC__();
		loop_rate.sleep();
		int key = cv::waitKey(1);
        	if (27 == key )
        	{
            		break;
        	}        
    }
    return 0;
}